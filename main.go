package main

import (
	"fmt"
	"log"
	"os"
	"strconv"

	"github.com/mymmrac/telego"
	th "github.com/mymmrac/telego/telegohandler"
	tu "github.com/mymmrac/telego/telegoutil"
)

func main() {

	apiToken := os.Getenv("TELEGRAM_API_TOKEN")
       if apiToken == "" {
           log.Fatal("API Token not set")
       }

       // Initialize your bot with apiToken
       bot, err := telego.NewBot(apiToken)
       if err != nil {
           log.Fatal(err)
       }


	updates, _ := bot.UpdatesViaLongPolling(nil)
	bh, _ := th.NewBotHandler(bot, updates)

	defer bh.Stop()
	defer bot.StopLongPolling()

	bh.Handle(func(bot *telego.Bot, update telego.Update) {
		//–û–±—Ä–∞–±–æ—Ç—á–∏–∫ /start
		chatID := tu.ID(update.Message.Chat.ID)


		keyboard := tu.Keyboard(
			tu.KeyboardRow(
				tu.KeyboardButton("üõí –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å"),
			),
			tu.KeyboardRow(
				tu.KeyboardButton("üí¥ –£–∑–Ω–∞—Ç—å –∫—É—Ä—Å"),
			),
			tu.KeyboardRow(
				tu.KeyboardButton("ü•ã –ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç"),
				tu.KeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã"),
			),
		).WithResizeKeyboard()

		message := tu.Message(
			chatID, 
			"–ü—Ä–∏–≤–µ—Çü§ù\nHrlxLogistics - –ª—É—á—à–∏–π –≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è –∑–∞–∫–∞–∑–∞\n—Å –∫–∏—Ç–∞–π—Å–∫–∏—Ö –ø–ª–æ—â–∞–¥–æ–∫, —Ç–∞–∫–∏—Ö –∫–∞–∫: Poizon,\n1688, taobao –∏ –¥—Ä.\n–£ –Ω–∞—Å —Å–∞–º–∞—è –≤—ã–≥–æ–¥–Ω–∞—è —Ü–µ–Ω–∞!\n–ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞\n\n‚ÑπÔ∏è–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –±—ã—Å—Ç—Ä–æ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤–µ—â–∏.\n\n‚úÖ @hrlxLogisticsss - –ø–∏—à–∏—Ç–µ —Å—é–¥–∞ –¥–ª—è\n–æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞, –ª–∏–±–æ –µ—Å–ª–∏ –æ—Å—Ç–∞–ª–∏—Å—å\n–∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã. –° —Ä–∞–¥–æ—Å—Ç—å—é —Å–æ\n–≤—Å–µ–º –ø–æ–¥—Å–∫–∞–∂–µ–º üòâ",
		).WithReplyMarkup(keyboard)

		_, _= bot.SendMessage(message)

	}, th.CommandEqual("start"))



	bh.Handle(func(bot *telego.Bot, update telego.Update) {
		//–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∑–∞–¥
		chatID := tu.ID(update.Message.Chat.ID)


		keyboard := tu.Keyboard(
			tu.KeyboardRow(
				tu.KeyboardButton("üõí –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å"),
			),
			tu.KeyboardRow(
				tu.KeyboardButton("üí¥ –£–∑–Ω–∞—Ç—å –∫—É—Ä—Å"),
			),
			tu.KeyboardRow(
				tu.KeyboardButton("ü•ã –ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç"),
				tu.KeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã"),
			),
		).WithResizeKeyboard()

		message := tu.Message(
			chatID, 
			"–ü—Ä–∏–≤–µ—Çü§ù\nHrlxLogistics - –ª—É—á—à–∏–π –≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è –∑–∞–∫–∞–∑–∞\n—Å –∫–∏—Ç–∞–π—Å–∫–∏—Ö –ø–ª–æ—â–∞–¥–æ–∫, —Ç–∞–∫–∏—Ö –∫–∞–∫: Poizon,\n1688, taobao –∏ –¥—Ä.\n–£ –Ω–∞—Å —Å–∞–º–∞—è –≤—ã–≥–æ–¥–Ω–∞—è —Ü–µ–Ω–∞!\n–ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞\n\n‚ÑπÔ∏è–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –±—ã—Å—Ç—Ä–æ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤–µ—â–∏.\n\n‚úÖ @hrlxLogisticsss - –ø–∏—à–∏—Ç–µ —Å—é–¥–∞ –¥–ª—è\n–æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞, –ª–∏–±–æ –µ—Å–ª–∏ –æ—Å—Ç–∞–ª–∏—Å—å\n–∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã. –° —Ä–∞–¥–æ—Å—Ç—å—é —Å–æ\n–≤—Å–µ–º –ø–æ–¥—Å–∫–∞–∂–µ–º üòâ",
		).WithReplyMarkup(keyboard)

		_, _= bot.SendMessage(message)

	}, th.TextEqual("üîô –ù–∞–∑–∞–¥"))
	
	bh.Handle(func(bot *telego.Bot, update telego.Update) {
		//–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ç–æ–∏–º–æ—Å—Ç–∏
		chatID := tu.ID(update.Message.Chat.ID)

		backButton := tu.Keyboard(
			tu.KeyboardRow(
				tu.KeyboardButton("üîô –ù–∞–∑–∞–¥"),
			),
		).WithResizeKeyboard()

		enterPrice := tu.Message(
			chatID, 
			"–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞ –≤ –Æ–∞–Ω—è—Ö",
		).WithReplyMarkup(backButton)

		_, _ = bot.SendMessage(enterPrice)

	}, th.TextEqual("üõí –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å"))

	bh.Handle(func(bot *telego.Bot, update telego.Update) {
		// –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–∞—Å—á–µ—Ç–∞ —Ü–µ–Ω—ã
		chatID := tu.ID(update.Message.Chat.ID)

		text := update.Message.Text
		price, err := strconv.Atoi(text)
		if err != nil {
			// handle err
			return
		}

		var result int
		if price < 1000 {
			result = int(float64(price*14) * 1.1)
		} else if price >= 1000{
			result = price*14 + 1000
		} else if price >= 2000{
			result = price*14 + 1500
		} else if price >= 4000{
			result = price *14 + 2500
		}

		backButton := tu.Keyboard(
			tu.KeyboardRow(
				tu.KeyboardButton("üîô –ù–∞–∑–∞–¥"),
			),
		).WithResizeKeyboard()


		resultMessage := tu.Message(
			chatID, 
			fmt.Sprintf("–¶–µ–Ω–∞ —Å —É—á–µ—Ç–æ–º –¥–æ—Å—Ç–∞–≤–∫–∏: %d‚ÇΩ + 480‚ÇΩ/–∫–≥\n\n–í —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤–∫–ª—é—á–µ–Ω–æ: \n- –í—ã–∫—É–ø —Ç–æ–≤–∞—Ä–∞ —Å Poizon\n- –î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –ö–∏—Ç–∞—é\n- –î–æ—Å—Ç–∞–≤–∫–∞ –∏–∑ –ö–∏—Ç–∞—è –¥–æ —Å–∫–ª–∞–¥–∞ –≤ –ú–æ—Å–∫–≤–µ\n- –°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ –≥—Ä—É–∑–∞\n\n–î–ª—è –∑–∞–∫–∞–∑–∞ @hrlxLogisticsss", result),
		).WithReplyMarkup(backButton)


		_, _ = bot.SendMessage(resultMessage)
	}, func(update telego.Update) bool {
		//check if message is a number
		_, err := strconv.Atoi(update.Message.Text)
		return err == nil
	})

	bh.Handle(func(bot *telego.Bot, update telego.Update) {
		//–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫—É—Ä—Å–∞
		chatID := tu.ID(update.Message.Chat.ID)

		backButton := tu.Keyboard(
			tu.KeyboardRow(
				tu.KeyboardButton("üîô –ù–∞–∑–∞–¥"),
			),
		).WithResizeKeyboard()

		courseOfCNY := tu.Message(
			chatID,
			"1‚ÇΩ = 14.0 ¬•",
		).WithReplyMarkup(backButton)

		_, _ = bot.SendMessage(courseOfCNY)
	}, th.TextEqual("üí¥ –£–∑–Ω–∞—Ç—å –∫—É—Ä—Å"))

	bh.Handle(func(bot *telego.Bot, update telego.Update) {
		//–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–∞
		chatID := tu.ID(update.Message.Chat.ID)

		link := tu.InlineKeyboard(
			tu.InlineKeyboardRow(
				tu.InlineKeyboardButton("–¢–£–¢",).WithURL("https://t.me/HrlxLogisticss"),
			),
		)

	
		inStock := tu.Message(
			chatID,
			"–í–µ—Å—å —Ç–æ–≤–∞—Ä –≤ –Ω–∞–ª–∏—á–∏–∏ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ —Å—Å—ã–ª–∫–µ –≤–Ω–∏–∑—É",
		).WithReplyMarkup(link)

		_, _ = bot.SendMessage(inStock)
		

	}, th.TextEqual("ü•ã –ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç"))




	bh.Handle(func(bot *telego.Bot, update telego.Update) {
		//–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
		chatID := tu.ID(update.Message.Chat.ID)

		contactButton := tu.InlineKeyboard(
			tu.InlineKeyboardRow(
				tu.InlineKeyboardButton("–ù–∞–ø–∏—Å–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—É üë®üèª‚Äçüíº").WithURL("https://t.me/@hrlxLogisticsss"),
			),
			tu.InlineKeyboardRow(
				tu.InlineKeyboardButton("–û–±–º–µ–Ω–Ω–∏–∫ üí±").WithURL("https://t.me/HrlxExchange"),
			),
			tu.InlineKeyboardRow(
				tu.InlineKeyboardButton("–ù–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª üì¢").WithURL("https://t.me/HrlxLogisticss"),
			),
			tu.InlineKeyboardRow(
				tu.InlineKeyboardButton("–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ üë®‚Äçüíª").WithURL( "https://t.me/varUserName"),
			),
		)

		contactText := tu.Message(
			chatID,
			"–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã",
		).WithReplyMarkup(contactButton)
		_, _ = bot.SendMessage(contactText)
	}, th.TextEqual("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã"))

	bh.Start()
}



